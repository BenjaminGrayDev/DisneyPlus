(function (React) {
    'use strict';

    function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

    var React__default = /*#__PURE__*/_interopDefault(React);

    console.log("ðŸ”¥ Custom Dashboard Component Loaded! ðŸ”¥"); // Debugging log

    const CustomDashboard = () => {
      return /*#__PURE__*/React__default.default.createElement("div", {
        style: {
          padding: "20px",
          textAlign: "center"
        }
      }, /*#__PURE__*/React__default.default.createElement("h1", null, "\uD83D\uDE80 Custom Admin Dashboard"), /*#__PURE__*/React__default.default.createElement("p", null, "This is a custom dashboard for AdminJS."));
    };

    const CustomLogin = () => {
      const [email, setEmail] = React.useState("");
      const [password, setPassword] = React.useState("");
      const [error, setError] = React.useState("");
      const handleSubmit = async e => {
        e.preventDefault();
        setError(""); // Clear previous errors

        try {
          // Send login request to AdminJS authentication API
          const response = await fetch("/admin/login", {
            method: "POST",
            headers: {
              "Content-Type": "application/json"
            },
            body: JSON.stringify({
              email,
              password
            })
          });
          if (response.ok) {
            // Redirect to AdminJS dashboard after successful login
            window.location.href = "/admin";
          } else {
            const data = await response.json();
            setError(data.message || "Invalid email or password");
          }
        } catch (err) {
          setError("Login failed. Please try again.");
        }
      };
      return /*#__PURE__*/React__default.default.createElement("div", {
        style: {
          display: "flex",
          justifyContent: "center",
          alignItems: "center",
          height: "100vh"
        }
      }, /*#__PURE__*/React__default.default.createElement("form", {
        onSubmit: handleSubmit,
        style: {
          width: "300px",
          padding: "20px",
          boxShadow: "0px 0px 10px rgba(0, 0, 0, 0.1)"
        }
      }, /*#__PURE__*/React__default.default.createElement("h2", null, "Login"), error && /*#__PURE__*/React__default.default.createElement("p", {
        style: {
          color: "red"
        }
      }, error), /*#__PURE__*/React__default.default.createElement("input", {
        type: "email",
        placeholder: "Email",
        value: email,
        onChange: e => setEmail(e.target.value),
        required: true,
        style: {
          width: "100%",
          marginBottom: "10px",
          padding: "8px"
        }
      }), /*#__PURE__*/React__default.default.createElement("input", {
        type: "password",
        placeholder: "Password",
        value: password,
        onChange: e => setPassword(e.target.value),
        required: true,
        style: {
          width: "100%",
          marginBottom: "10px",
          padding: "8px"
        }
      }), /*#__PURE__*/React__default.default.createElement("button", {
        type: "submit",
        style: {
          width: "100%",
          padding: "10px",
          background: "blue",
          color: "#fff"
        }
      }, "Login")));
    };

    AdminJS.UserComponents = {};
    AdminJS.UserComponents.Dashboard = CustomDashboard;
    AdminJS.UserComponents.Login = CustomLogin;

})(React);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
